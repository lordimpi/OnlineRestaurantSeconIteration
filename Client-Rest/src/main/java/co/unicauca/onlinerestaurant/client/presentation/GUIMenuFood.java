package co.unicauca.onlinerestaurant.client.presentation;

import static java.awt.Frame.MAXIMIZED_BOTH;
import java.beans.PropertyVetoException;

/**
 * Crea un jInternalFrame para el CRUD de platos principales
 *
 * @author Santiago Acu√±a
 */
public class GUIMenuFood extends javax.swing.JInternalFrame {

    /**
     * Guarda la instancia del formulario crear plato
     */
    private final GUICreateDish CreateDishe = new GUICreateDish();
    /**
     * Guarda la instancia del formulario buscar plato
     */
    private final GUIFindDishe FindDishe = new GUIFindDishe();
    /**
     * Guarda la instancia del formulario modificar plato
     */
    private final GUIModifyDish ModifyDishe = new GUIModifyDish();
    /**
     * Guarda la instancia del formulario borrar plato
     */
    private final GUIDeleteDish DeleteDishe = new GUIDeleteDish();

    /**
     * Guarda la instancia del formulario crear plato de entrada
     */
    private final GUICreateDishEntry CreateDishEntry = new GUICreateDishEntry();
    /**
     * Guarda la instancia del formulario buscar plato de Entrada
     */
    private final GUIFindDishEntry FindDishEntry = new GUIFindDishEntry();
    /**
     * Guarda la instancia del formulario modificar plato de Entrada
     */
    private final GUIModifyDishEntry ModifyDishEntry = new GUIModifyDishEntry();
    /**
     * Guarda la instancia del formulario borrar plato de Entrada
     */
    private final GUIDeleteDishEntry DeleteDishEntry = new GUIDeleteDishEntry();

    /**
     * Guarda la instancia del formulario crear postre
     */
    private final GUICreateDessert CreateDessert = new GUICreateDessert();
    /**
     * Guarda la instancia del formulario buscar plato
     */
    private final GUIFindDessert FindDessert = new GUIFindDessert();
    /**
     * Guarda la instancia del formulario modificar plato
     */
    private final GUIModifyDessert ModifyDessert = new GUIModifyDessert();
    /**
     * Guarda la instancia del formulario borrar plato
     */
    private final GUIDeleteDessert DeleteDessert = new GUIDeleteDessert();

    /**
     * Guarda la instancia del formulario crear una ensalada
     */
    private final GUICreateSalad CreateSalad = new GUICreateSalad();
    /**
     * Guarda la instancia del formulario buscar una ensalada
     */
    private final GUIFindSalad FindSalad = new GUIFindSalad();
    /**
     * Guarda la instancia del formulario modificar una ensalada
     */
    private final GUIModifySalad ModifySalad = new GUIModifySalad();
    /**
     * Guarda la instancia del formulario borrar una ensalada
     */
    private final GUIDeleteSalad DeleteSalad = new GUIDeleteSalad();
    /**
     * Guarda la instancia del formulario crear bebida
     */
    private final GUICreateDrink CreateDrink = new GUICreateDrink();
    /**
     * Guarda la instancia del formulario buscar bebida
     */
    private final GUIFindDrink FindDrink = new GUIFindDrink();
    /**
     * Guarda la instancia del formulario modificar bebida
     */
    private final GUIModifyDrink ModifyDrink = new GUIModifyDrink();
    /**
     * Guarda la instancia del formulario borrar una bebida
     */
    private final GUIDeleteDrink DeleteDrink = new GUIDeleteDrink();

    /**
     * Constructor para inicializar componentes
     *
     * @throws PropertyVetoException
     */
    public GUIMenuFood() throws PropertyVetoException {
        initComponents();
        this.setMaximum(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dskEscritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuDish = new javax.swing.JMenu();
        jMenuItemCreateDishe = new javax.swing.JMenuItem();
        jMenuItemFindDishe = new javax.swing.JMenuItem();
        jMenuItemModifyDishe = new javax.swing.JMenuItem();
        jMenuItemDeleteDishe = new javax.swing.JMenuItem();
        jMenuDrink = new javax.swing.JMenu();
        jMenuItemCreateDrink = new javax.swing.JMenuItem();
        jMenuItemFindDrink = new javax.swing.JMenuItem();
        jMenuItemModifyDrink = new javax.swing.JMenuItem();
        jMenuItemDeleteDrink = new javax.swing.JMenuItem();
        jMenuSalad = new javax.swing.JMenu();
        jMenuItemCreateSalad = new javax.swing.JMenuItem();
        jMenuItemFindSalad = new javax.swing.JMenuItem();
        jMenuItemModifySalad = new javax.swing.JMenuItem();
        jMenuItemDeleteSalad = new javax.swing.JMenuItem();
        jMenuDessert = new javax.swing.JMenu();
        jMenuItemCreateDessert = new javax.swing.JMenuItem();
        jMenuItemFindDessert = new javax.swing.JMenuItem();
        jMenuItemModifyDessert = new javax.swing.JMenuItem();
        jMenuItemDeleteDessert = new javax.swing.JMenuItem();
        jMenuDishEntry = new javax.swing.JMenu();
        jMenuItemCreateDishEntry = new javax.swing.JMenuItem();
        jMenuItemFindDishEntry = new javax.swing.JMenuItem();
        jMenuItemModifyDishEntry = new javax.swing.JMenuItem();
        jMenuItemDeleteDishEntry = new javax.swing.JMenuItem();

        setClosable(true);
        setResizable(true);

        javax.swing.GroupLayout dskEscritorioLayout = new javax.swing.GroupLayout(dskEscritorio);
        dskEscritorio.setLayout(dskEscritorioLayout);
        dskEscritorioLayout.setHorizontalGroup(
            dskEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 535, Short.MAX_VALUE)
        );
        dskEscritorioLayout.setVerticalGroup(
            dskEscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );

        getContentPane().add(dskEscritorio, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(54, 33, 88));

        jMenuDish.setBackground(new java.awt.Color(54, 33, 88));
        jMenuDish.setForeground(new java.awt.Color(255, 255, 255));
        jMenuDish.setText("Dish");

        jMenuItemCreateDishe.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemCreateDishe.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCreateDishe.setText("Create Dish");
        jMenuItemCreateDishe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateDisheActionPerformed(evt);
            }
        });
        jMenuDish.add(jMenuItemCreateDishe);

        jMenuItemFindDishe.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemFindDishe.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemFindDishe.setText("Find Dish");
        jMenuItemFindDishe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFindDisheActionPerformed(evt);
            }
        });
        jMenuDish.add(jMenuItemFindDishe);

        jMenuItemModifyDishe.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemModifyDishe.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemModifyDishe.setText("Modify Dish");
        jMenuItemModifyDishe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModifyDisheActionPerformed(evt);
            }
        });
        jMenuDish.add(jMenuItemModifyDishe);

        jMenuItemDeleteDishe.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemDeleteDishe.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemDeleteDishe.setText("Delete Dish");
        jMenuItemDeleteDishe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteDisheActionPerformed(evt);
            }
        });
        jMenuDish.add(jMenuItemDeleteDishe);

        jMenuBar1.add(jMenuDish);

        jMenuDrink.setBackground(new java.awt.Color(54, 33, 88));
        jMenuDrink.setForeground(new java.awt.Color(255, 255, 255));
        jMenuDrink.setText("Drink");

        jMenuItemCreateDrink.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemCreateDrink.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCreateDrink.setText("Create Drink");
        jMenuItemCreateDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateDrinkActionPerformed(evt);
            }
        });
        jMenuDrink.add(jMenuItemCreateDrink);

        jMenuItemFindDrink.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemFindDrink.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemFindDrink.setText("Find Drink");
        jMenuItemFindDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFindDrinkActionPerformed(evt);
            }
        });
        jMenuDrink.add(jMenuItemFindDrink);

        jMenuItemModifyDrink.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemModifyDrink.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemModifyDrink.setText("Modify Drink");
        jMenuItemModifyDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModifyDrinkActionPerformed(evt);
            }
        });
        jMenuDrink.add(jMenuItemModifyDrink);

        jMenuItemDeleteDrink.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemDeleteDrink.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemDeleteDrink.setText("Delete Drink");
        jMenuItemDeleteDrink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteDrinkActionPerformed(evt);
            }
        });
        jMenuDrink.add(jMenuItemDeleteDrink);

        jMenuBar1.add(jMenuDrink);

        jMenuSalad.setBackground(new java.awt.Color(54, 33, 88));
        jMenuSalad.setForeground(new java.awt.Color(255, 255, 255));
        jMenuSalad.setText("Salad");

        jMenuItemCreateSalad.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemCreateSalad.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCreateSalad.setText("Create Salad");
        jMenuItemCreateSalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateSaladActionPerformed(evt);
            }
        });
        jMenuSalad.add(jMenuItemCreateSalad);

        jMenuItemFindSalad.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemFindSalad.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemFindSalad.setText("Find Salad");
        jMenuItemFindSalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFindSaladActionPerformed(evt);
            }
        });
        jMenuSalad.add(jMenuItemFindSalad);

        jMenuItemModifySalad.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemModifySalad.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemModifySalad.setText("Modify Salad");
        jMenuItemModifySalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModifySaladActionPerformed(evt);
            }
        });
        jMenuSalad.add(jMenuItemModifySalad);

        jMenuItemDeleteSalad.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemDeleteSalad.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemDeleteSalad.setText("Delete Salad");
        jMenuItemDeleteSalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteSaladActionPerformed(evt);
            }
        });
        jMenuSalad.add(jMenuItemDeleteSalad);

        jMenuBar1.add(jMenuSalad);

        jMenuDessert.setBackground(new java.awt.Color(54, 33, 88));
        jMenuDessert.setForeground(new java.awt.Color(255, 255, 255));
        jMenuDessert.setText("Dessert");

        jMenuItemCreateDessert.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemCreateDessert.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCreateDessert.setText("Create Dessert");
        jMenuItemCreateDessert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateDessertActionPerformed(evt);
            }
        });
        jMenuDessert.add(jMenuItemCreateDessert);

        jMenuItemFindDessert.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemFindDessert.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemFindDessert.setText("Find Desert");
        jMenuItemFindDessert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFindDessertActionPerformed(evt);
            }
        });
        jMenuDessert.add(jMenuItemFindDessert);

        jMenuItemModifyDessert.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemModifyDessert.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemModifyDessert.setText("Modify Desert");
        jMenuItemModifyDessert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModifyDessertActionPerformed(evt);
            }
        });
        jMenuDessert.add(jMenuItemModifyDessert);

        jMenuItemDeleteDessert.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemDeleteDessert.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemDeleteDessert.setText("Delete Desert");
        jMenuItemDeleteDessert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteDessertActionPerformed(evt);
            }
        });
        jMenuDessert.add(jMenuItemDeleteDessert);

        jMenuBar1.add(jMenuDessert);

        jMenuDishEntry.setBackground(new java.awt.Color(54, 33, 88));
        jMenuDishEntry.setForeground(new java.awt.Color(255, 255, 255));
        jMenuDishEntry.setText("Dish Entry");

        jMenuItemCreateDishEntry.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemCreateDishEntry.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCreateDishEntry.setText("Create Dish  Entry");
        jMenuItemCreateDishEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreateDishEntryActionPerformed(evt);
            }
        });
        jMenuDishEntry.add(jMenuItemCreateDishEntry);

        jMenuItemFindDishEntry.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemFindDishEntry.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemFindDishEntry.setText("Find Dish Entry");
        jMenuItemFindDishEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFindDishEntryActionPerformed(evt);
            }
        });
        jMenuDishEntry.add(jMenuItemFindDishEntry);

        jMenuItemModifyDishEntry.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemModifyDishEntry.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemModifyDishEntry.setText("Modify Dish Entry");
        jMenuItemModifyDishEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModifyDishEntryActionPerformed(evt);
            }
        });
        jMenuDishEntry.add(jMenuItemModifyDishEntry);

        jMenuItemDeleteDishEntry.setBackground(new java.awt.Color(54, 33, 88));
        jMenuItemDeleteDishEntry.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemDeleteDishEntry.setText("Delete Dish Entry");
        jMenuItemDeleteDishEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteDishEntryActionPerformed(evt);
            }
        });
        jMenuDishEntry.add(jMenuItemDeleteDishEntry);

        jMenuBar1.add(jMenuDishEntry);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Inicializa el formulario crear plato
     *
     * @param evt evento del menu item
     */
    private void jMenuItemCreateDisheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateDisheActionPerformed

        if (!CreateDishe.isVisible()) {
            CreateDishe.setMaximizable(true);
            dskEscritorio.add(CreateDishe);
            CreateDishe.show();
        }

    }//GEN-LAST:event_jMenuItemCreateDisheActionPerformed

    /**
     * Inicializar el formulario buscar plato
     *
     * @param evt evento del menu item
     */
    private void jMenuItemFindDisheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFindDisheActionPerformed
        if (!FindDishe.isVisible()) {
            FindDishe.setMaximizable(true);
            dskEscritorio.add(FindDishe);
            FindDishe.show();
        }

    }//GEN-LAST:event_jMenuItemFindDisheActionPerformed

    /**
     * Inicializa el formulario modificar plato
     *
     * @param evt evento del menu item
     */
    private void jMenuItemModifyDisheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModifyDisheActionPerformed
        if (!ModifyDishe.isVisible()) {
            ModifyDishe.setMaximizable(true);
            dskEscritorio.add(ModifyDishe);
            ModifyDishe.show();
        }

    }//GEN-LAST:event_jMenuItemModifyDisheActionPerformed

    /**
     * Inicializa el formulario borrar plato
     *
     * @param evt evento del meun item
     */
    private void jMenuItemDeleteDisheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteDisheActionPerformed
        if (!DeleteDishe.isVisible()) {
            DeleteDishe.setMaximizable(true);
            dskEscritorio.add(DeleteDishe);
            DeleteDishe.show();
        }

    }//GEN-LAST:event_jMenuItemDeleteDisheActionPerformed

    private void jMenuItemCreateDessertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateDessertActionPerformed
        if (!CreateDessert.isVisible()) {
            CreateDessert.setMaximizable(true);
            dskEscritorio.add(CreateDessert);
            CreateDessert.show();
        }
    }//GEN-LAST:event_jMenuItemCreateDessertActionPerformed

    private void jMenuItemFindDessertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFindDessertActionPerformed
        if (!FindDessert.isVisible()) {
            FindDessert.setMaximizable(true);
            dskEscritorio.add(FindDessert);
            FindDessert.show();
        }
    }//GEN-LAST:event_jMenuItemFindDessertActionPerformed

    private void jMenuItemModifyDessertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModifyDessertActionPerformed
        if (!ModifyDessert.isVisible()) {
            ModifyDessert.setMaximizable(true);
            dskEscritorio.add(ModifyDessert);
            ModifyDessert.show();
        }
    }//GEN-LAST:event_jMenuItemModifyDessertActionPerformed

    private void jMenuItemDeleteDessertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteDessertActionPerformed
        if (!DeleteDessert.isVisible()) {
            DeleteDessert.setMaximizable(true);
            dskEscritorio.add(DeleteDessert);
            DeleteDessert.show();
        }
    }//GEN-LAST:event_jMenuItemDeleteDessertActionPerformed

<<<<<<< HEAD
    private void jMenuItemCreateDishEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateDishEntryActionPerformed
        if (!CreateDishEntry.isVisible()) {
            CreateDishEntry.setMaximizable(true);
            dskEscritorio.add(CreateDishEntry);
            CreateDishEntry.show();
        }
    }//GEN-LAST:event_jMenuItemCreateDishEntryActionPerformed

    private void jMenuItemFindDishEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFindDishEntryActionPerformed
        if (!FindDishEntry.isVisible()) {
            FindDishEntry.setMaximizable(true);
            dskEscritorio.add(FindDishEntry);
            FindDishEntry.show();
        }
    }//GEN-LAST:event_jMenuItemFindDishEntryActionPerformed

    private void jMenuItemModifyDishEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModifyDishEntryActionPerformed
        if (!ModifyDishEntry.isVisible()) {
            ModifyDishEntry.setMaximizable(true);
            dskEscritorio.add(ModifyDishEntry);
            ModifyDishEntry.show();
        }
    }//GEN-LAST:event_jMenuItemModifyDishEntryActionPerformed

    private void jMenuItemDeleteDishEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteDishEntryActionPerformed
        if (!DeleteDishEntry.isVisible()) {
            DeleteDishEntry.setMaximizable(true);
            dskEscritorio.add(DeleteDishEntry);
            DeleteDishEntry.show();
        }
    }//GEN-LAST:event_jMenuItemDeleteDishEntryActionPerformed
=======
    private void jMenuItemCreateSaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateSaladActionPerformed
        if (!CreateSalad.isVisible()) {
            CreateSalad.setMaximizable(true);
            dskEscritorio.add(CreateSalad);
            CreateSalad.show();
        }
    }//GEN-LAST:event_jMenuItemCreateSaladActionPerformed

    private void jMenuItemFindSaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFindSaladActionPerformed
        if (!FindSalad.isVisible()) {
            FindSalad.setMaximizable(true);
            dskEscritorio.add(FindSalad);
            FindSalad.show();
        }
    }//GEN-LAST:event_jMenuItemFindSaladActionPerformed

    private void jMenuItemModifySaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModifySaladActionPerformed
        if (!ModifySalad.isVisible()) {
            ModifySalad.setMaximizable(true);
            dskEscritorio.add(ModifySalad);
            ModifySalad.show();
        }
    }//GEN-LAST:event_jMenuItemModifySaladActionPerformed

    private void jMenuItemDeleteSaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteSaladActionPerformed
        if (!DeleteSalad.isVisible()) {
            DeleteSalad.setMaximizable(true);
            dskEscritorio.add(DeleteSalad);
            DeleteSalad.show();
        }
    }//GEN-LAST:event_jMenuItemDeleteSaladActionPerformed

    private void jMenuItemCreateDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreateDrinkActionPerformed

        if (!CreateDrink.isVisible()) {
            CreateDrink.setMaximizable(true);
            dskEscritorio.add(CreateDrink);
            CreateDrink.show();
        }
    }//GEN-LAST:event_jMenuItemCreateDrinkActionPerformed

    private void jMenuItemFindDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFindDrinkActionPerformed

        if (!FindDrink.isVisible()) {
            FindDrink.setMaximizable(true);
            dskEscritorio.add(FindDrink);
            FindDrink.show();
        }
    }//GEN-LAST:event_jMenuItemFindDrinkActionPerformed

    private void jMenuItemModifyDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModifyDrinkActionPerformed
        if (!ModifyDrink.isVisible()) {
            ModifyDrink.setMaximizable(true);
            dskEscritorio.add(ModifyDrink);
            ModifyDrink.show();
        }
    }//GEN-LAST:event_jMenuItemModifyDrinkActionPerformed

    private void jMenuItemDeleteDrinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteDrinkActionPerformed
        if (!DeleteDrink.isVisible()) {
            DeleteDrink.setMaximizable(true);
            dskEscritorio.add(DeleteDrink);
            DeleteDrink.show();
        }
    }//GEN-LAST:event_jMenuItemDeleteDrinkActionPerformed
>>>>>>> 79ddd11d420770913e0a21e05744035bb4a55ef7

    /**
     * Metodo encargado de inicializar el formulario de menu para platos de
     * comida
     *
     * @param args
     * @throws PropertyVetoException
     */
    public static void main(String[] args) throws PropertyVetoException {
        GUIMenuFood gui = new GUIMenuFood();
        gui.setVisible(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dskEscritorio;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuDessert;
    private javax.swing.JMenu jMenuDish;
    private javax.swing.JMenu jMenuDishEntry;
    private javax.swing.JMenu jMenuDrink;
    private javax.swing.JMenuItem jMenuItemCreateDessert;
    private javax.swing.JMenuItem jMenuItemCreateDishEntry;
    private javax.swing.JMenuItem jMenuItemCreateDishe;
    private javax.swing.JMenuItem jMenuItemCreateDrink;
    private javax.swing.JMenuItem jMenuItemCreateSalad;
    private javax.swing.JMenuItem jMenuItemDeleteDessert;
    private javax.swing.JMenuItem jMenuItemDeleteDishEntry;
    private javax.swing.JMenuItem jMenuItemDeleteDishe;
    private javax.swing.JMenuItem jMenuItemDeleteDrink;
    private javax.swing.JMenuItem jMenuItemDeleteSalad;
    private javax.swing.JMenuItem jMenuItemFindDessert;
    private javax.swing.JMenuItem jMenuItemFindDishEntry;
    private javax.swing.JMenuItem jMenuItemFindDishe;
    private javax.swing.JMenuItem jMenuItemFindDrink;
    private javax.swing.JMenuItem jMenuItemFindSalad;
    private javax.swing.JMenuItem jMenuItemModifyDessert;
    private javax.swing.JMenuItem jMenuItemModifyDishEntry;
    private javax.swing.JMenuItem jMenuItemModifyDishe;
    private javax.swing.JMenuItem jMenuItemModifyDrink;
    private javax.swing.JMenuItem jMenuItemModifySalad;
    private javax.swing.JMenu jMenuSalad;
    // End of variables declaration//GEN-END:variables
}
