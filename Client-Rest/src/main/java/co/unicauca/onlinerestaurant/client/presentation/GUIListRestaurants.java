package co.unicauca.onlinerestaurant.client.presentation;

import co.unicauca.onlinerestaurant.client.access.Factory;
import co.unicauca.onlinerestaurant.client.access.IRestaurantAccess;
import co.unicauca.onlinerestaurant.client.domain.services.RestaurantService;
import co.unicauca.onlinerestaurant.client.infra.Messages;
import static co.unicauca.onlinerestaurant.client.infra.Messages.successMessage;
import co.unicauca.onlinerestaurant.commons.domain.Restaurant;
import java.awt.Image;
import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.TableModel;

/**
 * Crea un formulario para poder listar todos los restaurantes
 *
 * @author Santiago Acu√±a
 */
public class GUIListRestaurants extends javax.swing.JInternalFrame {

    /**
     * Almacena una lista de restaurantes
     */
    private List<Restaurant> restaurants;

    /**
     * Creates new form GUIListRestaurants
     *
     * @param restaurants Lista de restaurante
     * @throws java.beans.PropertyVetoException
     */
    public GUIListRestaurants(List<Restaurant> restaurants) throws PropertyVetoException {
        initComponents();
        this.setMaximum(true);
        this.restaurants = restaurants;
        mostrarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnNorte = new javax.swing.JPanel();
        jPnSur = new javax.swing.JPanel();
        jBtnSeleccionarRestaurante = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jPnCentro = new javax.swing.JPanel();
        jPnlCentroNorte = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLblCargarImg = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLblRestaurantNombre = new javax.swing.JLabel();
        jLblRestaurantDireccion = new javax.swing.JLabel();
        jLblRestaurantTelefono = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblRestaurants = new javax.swing.JTable();

        setClosable(true);
        setResizable(true);

        jPnNorte.setBackground(new java.awt.Color(54, 33, 88));
        jPnNorte.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnNorte.setPreferredSize(new java.awt.Dimension(450, 50));

        javax.swing.GroupLayout jPnNorteLayout = new javax.swing.GroupLayout(jPnNorte);
        jPnNorte.setLayout(jPnNorteLayout);
        jPnNorteLayout.setHorizontalGroup(
            jPnNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 747, Short.MAX_VALUE)
        );
        jPnNorteLayout.setVerticalGroup(
            jPnNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        getContentPane().add(jPnNorte, java.awt.BorderLayout.PAGE_START);

        jPnSur.setBackground(new java.awt.Color(54, 33, 88));
        jPnSur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPnSur.setPreferredSize(new java.awt.Dimension(450, 50));

        jBtnSeleccionarRestaurante.setText("Seleccionar Restaurante");
        jBtnSeleccionarRestaurante.setFocusPainted(false);
        jBtnSeleccionarRestaurante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSeleccionarRestauranteActionPerformed(evt);
            }
        });
        jPnSur.add(jBtnSeleccionarRestaurante);

        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });
        jPnSur.add(jBtnCancelar);

        getContentPane().add(jPnSur, java.awt.BorderLayout.PAGE_END);

        jPnCentro.setLayout(new java.awt.BorderLayout());

        jPnlCentroNorte.setBackground(new java.awt.Color(255, 255, 255));
        jPnlCentroNorte.setPreferredSize(new java.awt.Dimension(711, 200));
        jPnlCentroNorte.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 168));

        jLblCargarImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLblCargarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLblCargarImg, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPnlCentroNorte.add(jPanel1, java.awt.BorderLayout.LINE_START);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLblRestaurantNombre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLblRestaurantNombre.setForeground(new java.awt.Color(0, 0, 0));
        jLblRestaurantNombre.setText("Nombre");

        jLblRestaurantDireccion.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLblRestaurantDireccion.setForeground(new java.awt.Color(0, 0, 0));
        jLblRestaurantDireccion.setText("Direccion");

        jLblRestaurantTelefono.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLblRestaurantTelefono.setForeground(new java.awt.Color(0, 0, 0));
        jLblRestaurantTelefono.setText("Telefono");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblRestaurantNombre)
                    .addComponent(jLblRestaurantTelefono)
                    .addComponent(jLblRestaurantDireccion))
                .addGap(0, 311, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLblRestaurantNombre)
                .addGap(40, 40, 40)
                .addComponent(jLblRestaurantDireccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jLblRestaurantTelefono)
                .addGap(21, 21, 21))
        );

        jPnlCentroNorte.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPnCentro.add(jPnlCentroNorte, java.awt.BorderLayout.PAGE_START);

        jTblRestaurants = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTblRestaurants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Direccion", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblRestaurants.setFocusable(false);
        jTblRestaurants.setRowHeight(30);
        jTblRestaurants.getTableHeader().setReorderingAllowed(false);
        jTblRestaurants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblRestaurantsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblRestaurants);

        jPnCentro.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPnCentro, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Se encarga de seleccionar un nombre de un restaurante que fue
     * seleccionada de un jtable
     *
     * @param evt evento del boton
     */
    private void jBtnSeleccionarRestauranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSeleccionarRestauranteActionPerformed

        if (jLblRestaurantNombre.getText().equals("Nombre")) {
            Messages.warningMessage("Debe seleccionar un restaurante", "Warning");
            return;
        }
        try {
            GUIMenuCustomer.restaurantName = jLblRestaurantNombre.getText();
            GUIMenuAdmin.restaurantName = jLblRestaurantNombre.getText();
            Messages.successMessage("Restaurante " + jLblRestaurantNombre.getText() + " fue seleccionado", "EXITO");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jBtnSeleccionarRestauranteActionPerformed

    /**
     * Metodo encargado de almacenar el identificador de una fila que
     * seleccionada por el mouse del jtable
     *
     * @param evt evento del mouse
     */
    private void jTblRestaurantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblRestaurantsMouseClicked

        int i = jTblRestaurants.getSelectedRow();
        TableModel model = jTblRestaurants.getModel();
        jLblRestaurantNombre.setText(model.getValueAt(i, 0).toString());
        jLblRestaurantDireccion.setText(model.getValueAt(i, 1).toString());
        jLblRestaurantTelefono.setText(model.getValueAt(i, 2).toString());
        addIcon(jLblCargarImg, "src/main/java/resources/RestaurantLogo.png");

    }//GEN-LAST:event_jTblRestaurantsMouseClicked

    /**
     * Cancela la seleccio de un restaurante
     *
     * @param evt evento del boton
     */
    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed

        jLblRestaurantNombre.setText("Nombre");
        jLblRestaurantDireccion.setText("Direccion");
        jLblRestaurantTelefono.setText("Telefono");
        addIcon(jLblCargarImg, null);
        cargarLista();
        mostrarTabla();
    }//GEN-LAST:event_jBtnCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnSeleccionarRestaurante;
    private javax.swing.JLabel jLblCargarImg;
    private javax.swing.JLabel jLblRestaurantDireccion;
    private javax.swing.JLabel jLblRestaurantNombre;
    private javax.swing.JLabel jLblRestaurantTelefono;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPnCentro;
    private javax.swing.JPanel jPnNorte;
    private javax.swing.JPanel jPnSur;
    private javax.swing.JPanel jPnlCentroNorte;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTblRestaurants;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo encargado de mostrar los datos en un jtable
     */
    private void mostrarTabla() {
        String dataTable[][] = new String[restaurants.size()][3];

        for (int i = 0; i < restaurants.size(); i++) {
            dataTable[i][0] = restaurants.get(i).getNameRestaurant();
            dataTable[i][1] = restaurants.get(i).getAddressRestaurant();
            dataTable[i][2] = restaurants.get(i).getPhone();
        }

        jTblRestaurants.setModel(new javax.swing.table.DefaultTableModel(
                dataTable, new String[]{"Nombre", "Direccion", "Telefono"}));

    }

    /**
     * Metodo encargado de cargar un icono para una etiquetas
     *
     * @param lb Etiqueta que funciona como icono
     * @param pathIcon Direccion donde se encuentra el icono
     */
    private void addIcon(JLabel lb, String pathIcon) {
        ImageIcon img = new ImageIcon(pathIcon);
        Icon icono = new ImageIcon(img.getImage().getScaledInstance(
                lb.getWidth(),
                lb.getHeight(),
                Image.SCALE_DEFAULT));
        lb.setIcon(icono);
        this.repaint();
    }

    /**
     * Carga un lista a traves de un socket
     */
    private void cargarLista() {
        IRestaurantAccess service = Factory.getInstance().getRestaurantService();
        // Inyecta la dependencia
        RestaurantService restaurant = new RestaurantService(service);

        try {
            restaurants = restaurant.listRestaurants();
        } catch (Exception ex) {
            successMessage(ex.getMessage(), "Atenci√≥n");
        }
    }
}
